DATA CLEANING -

import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder

# Load the dataset
data_path = 'drug_demand_forecasting.xlsx'  # Path to the dataset
data = pd.read_excel(data_path)

# Step 1: Data Cleaning
# Handling missing values
data['Demand'].fillna(data['Demand'].median(), inplace=True)  # Replace NaN with median
data['Prescription_Volume'].fillna(data['Prescription_Volume'].median(), inplace=True)
data['Region'].fillna(data['Region'].mode()[0], inplace=True)

# Drop rows with excessive missing data
data.dropna(subset=['Event', 'Market_News', 'Press_Release'], inplace=True)

# Step 2: Encoding categorical variables
le = LabelEncoder()
data['Region'] = le.fit_transform(data['Region'])
data['Drug'] = le.fit_transform(data['Drug'])
data['Category'] = le.fit_transform(data['Category'])
data['Drug_Type'] = le.fit_transform(data['Drug_Type'])

# Step 3: Feature Engineering
# Creating time-based features
data['Date'] = pd.to_datetime(data['Date'])
data['Year'] = data['Date'].dt.year
data['Month'] = data['Date'].dt.month
data['Weekday'] = data['Date'].dt.weekday

# Lag features for time-series modeling
data['Demand_Lag_1'] = data['Demand'].shift(1)
data['Demand_Lag_7'] = data['Demand'].shift(7)  # Weekly lag

# Rolling features for smoothing
data['Demand_Rolling_Mean_7'] = data['Demand'].rolling(window=7).mean()

# Drop rows with NaN values introduced by lagging
data.dropna(inplace=True)

# Step 4: Save the cleaned data
cleaned_data_path = 'cleaned_drug_demand_data.csv'
data.to_csv(cleaned_data_path, index=False)

print(f"Data cleaning completed. Cleaned data saved to {cleaned_data_path}.")


---[# Steps;

1. Cleaning data - provide code for this
2. appropriate algorithm for problem statement
3. code for demand optimum inventory according to data set given provide code
4. use NLP for Preprocess textual and check the influence factors for drug demand

do data modelling having all three feature in jupyter notebook so that ir can further use fin fast api and streamlit] write this promt
